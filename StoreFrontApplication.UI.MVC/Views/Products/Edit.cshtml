@model StoreFrontApplication.DATA.EF.Product

@{
    ViewBag.Title = "Edit " + Model.ProductName;
}

<h2 class="text-center">@ViewBag.Title</h2>







@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)
    <div class="card mb-3 offset-1" style="max-width: 80%">
        <div class="row no-gutters">
            <div class="col-md-4">
                <img src="~/Content/img/products/@Model.ProductName .jpg" class="card-img" alt="@Model.ProductName thumbnail image">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AmtInStock, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AmtInStock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AmtInStock, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AmtOnOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AmtOnOrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AmtOnOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierID, "SupplierID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InStockID, "InStockID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("InStockID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InStockID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-success" />
                            <span>@Html.ActionLink("Cancel", "Details", new { id = Model.ProductID }, new { @class = "btn btn-danger" })</span>
                        </div>
                    </div>
                    @*<p class="card-text">@Html.DisplayFor(model => model.StockStatu.Status) in stock</p>
        <p class="card-text">
            <small class="text-muted">
                Price:<br />
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })<br /><br />
                <a href="@Url.Action("Index", "Products")" class="btn btn-outline-primary">Back to Products</a><br /><br />
                @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Employee"))
                {
                    <span>@Html.ActionLink("Edit", "Edit", new { id = Model.ProductID }, new { @class = "btn btn-outline-primary" })</span>
                }
                @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Employee"))
                {
                    <span>@Html.ActionLink("Delete", "Delete", new { id = Model.ProductID }, new { @class = "btn btn-lg btn-danger pull-right" })</span>
                }
            </small>
        </p>*@
                </div>
            </div>
        </div>
    </div>
}











<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
